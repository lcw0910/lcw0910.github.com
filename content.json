{"meta":{"title":"Develism","subtitle":null,"description":null,"author":"Cheolwon Lee","url":"http://lcw0910.github.io"},"pages":[{"title":"About me","date":"2017-10-12T04:52:51.000Z","updated":"2020-05-14T13:44:29.631Z","comments":true,"path":"about/index.html","permalink":"http://lcw0910.github.io/about/index.html","excerpt":"","text":"Test"}],"posts":[{"title":"Hello World","slug":"hello-world","date":"2020-05-14T13:44:29.628Z","updated":"2020-05-14T13:44:29.628Z","comments":true,"path":"2020/05/14/hello-world/","link":"","permalink":"http://lcw0910.github.io/2020/05/14/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"image-test","slug":"image-test","date":"2017-12-27T06:49:41.000Z","updated":"2020-05-14T13:44:29.629Z","comments":true,"path":"2017/12/27/image-test/","link":"","permalink":"http://lcw0910.github.io/2017/12/27/image-test/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"MongoDB Database Management Tools","slug":"mongodb-tools","date":"2017-12-27T02:18:08.000Z","updated":"2020-05-14T13:44:29.629Z","comments":true,"path":"2017/12/27/mongodb-tools/","link":"","permalink":"http://lcw0910.github.io/2017/12/27/mongodb-tools/","excerpt":"","text":"MongoDB 사용시 유용한 Tool에 대해 정리합니다. Database Management ToolMongoDB는 JavaScript 문법으로 터미널을 통한 작업만으로는 다소 불편함이 있습니다.RDB 또한 이러한 불편으로 SQL Server (MSSQL), Toad(Oracle, MySQL), Workbench(Mysql) 등의 매니지먼트 툴이 존재하며, 쿼리 작성 및 실행, 데이터 모델링을 할수있는 편의 기능들을 제공합니다.MongoDB 는 NoSQL 이지만 DB 또는 Collection의 옵션등을 포함하는 스키마 데이터를 포함하며,비정형화된 데이터를 관리하기 위한 모델링을 필요로 하기때문에 이를 지원하기 위한 Tool 이 필요하다 판단되어 이에 대한 조사 및 Post 작성을 하게 되었습니다. Robo 3T 설명 : 임베디드 쉘이 있는 MongoDB GUI로 MongoDB에 접속해 쿼리를 작성하고 실행결과를 볼수있는 심플한 GUI를 제공한다. 사용성 : 쿼리 입력창에 한글입력이 제대로 되지 않아 사용상 어려움이 있는 것으로 확인됨. 라이센스 : 무료 공식사이트 : https://robomongo.org/ Studio 3t 설명 : Robo 3T와 마찬가지로 robomongo 에서 출시된 전문가용 MongoDB IDE로써 아래의 기능들을 포함합니다. 임베디드 쉘이 있는 GUI 비주얼 쿼리 빌더 인 플레이스 편집 자동완성 기능이 있는 IntelliShell SQL DB Import / Export 집계 파이프 라인 편집기 And so much more… 사용성 : Robo 3T에서 문제로 확인되었던 한글입력문제가 없고, 사이트에서 소개하는 많은 기능들을 제공함. 다만 라이센스가 유료. 라이센스 : 유료 공식사이트 : https://robomongo.org/ Data Modeling ToolHackolate 사이트 : https://hackolade.com 라이센스 : 유료 사용성 : MongoDB 이외에도 상당히 다양한 NoSQL 제품군의 데이터 모델링을 위한 기능을 제공한다. 유료 라이센스라서 그런지 모르겠으나 15일 Trial Version으로 사용해본 바 Reverse Engineering 은 되지만 Forward Engineering 이 Submit을 해도 적용되지 않는다.NoSQL의 Document 기반 ERD를 작성하기 위한 제품별 기능들을 제공하나 제품별 세부적인 스키마 정보를 포함하지는 않는 것 같다..","categories":[{"name":"Database","slug":"Database","permalink":"http://lcw0910.github.io/categories/Database/"},{"name":"NoSQL","slug":"Database/NoSQL","permalink":"http://lcw0910.github.io/categories/Database/NoSQL/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://lcw0910.github.io/tags/Database/"},{"name":"NoSQL","slug":"NoSQL","permalink":"http://lcw0910.github.io/tags/NoSQL/"},{"name":"Tool","slug":"Tool","permalink":"http://lcw0910.github.io/tags/Tool/"}]},{"title":"[MongoDB] 01.시작하기","slug":"mongodb-tutorials-01","date":"2017-12-21T04:16:30.000Z","updated":"2020-05-14T13:44:29.630Z","comments":true,"path":"2017/12/21/mongodb-tutorials-01/","link":"","permalink":"http://lcw0910.github.io/2017/12/21/mongodb-tutorials-01/","excerpt":"","text":"이 장에서는 MongDB의 기본적인 사용법을 정리합니다.DB, Collection, Document의 생성 및 조회를 위한 기본 명령어를 소개합니다. DB 생성 &amp; Collection 생성MongoDB는 RDB와 같은 별도의 DB생성 명령이 존재하지 않는다. (ex. CREATE DATABASE ;)USE 명령을 통해 사용할 DB를 선택하고 Collection 을 생성하면 DB는 자동으로 생성된다.1234567891011121314151617181920212223242526272829303132333435// DB생성use opera // 실행switched to db opera // 결과// Collection 생성// ex) db.createCollection('DB명', [옵션]);// 실행db.createCollection('shops');// 결과&#123; \"ok\" : 1.0&#125;// 데이터베이스 목록show dbsadmin 0.000GBconfig 0.000GBhomestead 0.000GBlocal 0.000GBopera 0.000GBtests 0.000GB// 현재 선택된 DB 확인dbopera// Collection 목록 확인show collectionsshops Document 생성 &amp; 조회Document 생성은 단일 Insert와 Bulk Insert 각각 다른 결과를 Return 한다.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081// Insert Documentdb.shops.insert(&#123; mall_id: \"bpmt001\", shop_no: 1, shop_name: \"테스트몰(국문)\", locale: \"ko_KR\", currency: \"KRW\"&#125;)WriteResult(&#123; \"nInserted\" : 1 &#125;) // 결과// Bulk Insertdb.shops.insert([ &#123; mall_id: \"bpmt001\", shop_no: 2, shop_name: \"테스트몰(영문)\", locale: \"en_US\", currency: \"USD\" &#125;, &#123; mall_id: \"bpmt001\", shop_no: 3, shop_name: \"테스트몰(일문)\", locale: \"ja_JP\", currency: \"JPY\" &#125;])//결과BulkWriteResult(&#123; \"writeErrors\" : [ ], \"writeConcernErrors\" : [ ], \"nInserted\" : 2, \"nUpserted\" : 0, \"nMatched\" : 0, \"nModified\" : 0, \"nRemoved\" : 0, \"upserted\" : [ ]&#125;)// 검색db.shops.find()// 결과&#123; \"_id\" : ObjectId(\"5a41f77b78cc2bf83d7b206e\"), \"mall_id\" : \"bpmt001\", \"shop_no\" : 1.0, \"shop_name\" : \"테스트몰(국문)\", \"locale\" : \"ko_KR\", \"currency\" : \"KRW\"&#125;&#123; \"_id\" : ObjectId(\"5a41f7ea78cc2bf83d7b206f\"), \"mall_id\" : \"bpmt001\", \"shop_no\" : 2.0, \"shop_name\" : \"테스트몰(영문)\", \"locale\" : \"en_US\", \"currency\" : \"USD\"&#125;&#123; \"_id\" : ObjectId(\"5a41f7ea78cc2bf83d7b2070\"), \"mall_id\" : \"bpmt001\", \"shop_no\" : 3.0, \"shop_name\" : \"테스트몰(일문)\", \"locale\" : \"ja_JP\", \"currency\" : \"JPY\"&#125;// 조건검색db.shops.find(&#123;locale: \"ko_KR\"&#125;)// 결과&#123; \"_id\" : ObjectId(\"5a41f77b78cc2bf83d7b206e\"), \"mall_id\" : \"bpmt001\", \"shop_no\" : 1.0, \"shop_name\" : \"테스트몰(국문)\", \"locale\" : \"ko_KR\", \"currency\" : \"KRW\"&#125; Document 수정123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105// Field Update : 특정 필드의 값만 없데이트 하기// 특정필드의 값을 수정할땐 $set 연산자를 사용합니다. 이 연산자를 사용해서 새로운 Field를 추가할 수도 있습니다.db.shops.update( &#123;locale: \"ko_KR\"&#125;, &#123; $set: &#123; shop_name: \"테스트몰(국문) 2nd\" &#125; &#125;)// 결과WriteResult(&#123; \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 &#125;)// Replace Document : Object의 ID값은 변경되지 않고 문서를 Replace 하기.db.shops.update( &#123;locale: \"ko_KR\"&#125;, &#123; \"mall_id\" : \"bpmt001\", \"shop_no\" : 1.0, \"shop_name\" : \"테스트몰(국문) 2nd\", \"locale\" : \"ko_KR\", \"currency\" : \"KRW\" &#125;)// 결과WriteResult(&#123; \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 &#125;)// 특정필드를 제거하기db.shops.update( &#123;locale: \"ko_KR\"&#125;, &#123; $unset: &#123;\"currency\": 1&#125; &#125;)//결과WriteResult(&#123; \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 &#125;)// criteria에 해당되는 document가 존재하지 않는다면 새로 추가하기db.shops.update( &#123;locale: \"zh_CN\"&#125;, &#123; mall_id: \"bpmt001\", shop_no: 4, shop_name: \"테스트몰(중문)\", locale: \"zh_CN\", currency: \"CNY\" &#125;, &#123;upsert: true&#125;)// 결과WriteResult(&#123; \"nMatched\" : 0, \"nUpserted\" : 1, \"nModified\" : 0, \"_id\" : ObjectId(\"5a42006dc593ce3009ebeb1f\")&#125;)// Document 여러개 수정하기// multi 옵션을 true로 설정해야 조건에 맞는 여러개의 Document가 수정된다.db.shops.update( &#123;mall_id: \"bpmt001\"&#125;, &#123;$set: &#123; service: [\"translation\"] &#125;&#125;, &#123;upsert: true, multi: true&#125;)// 배열에 값 추가하기 + 오름차순 정렬하기db.shops.update( &#123;mall_id: \"bpmt001\"&#125;, &#123;$push: &#123; service: &#123; $each: [\"etc\", \"special\"], $sort: 1 &#125; &#125;&#125;, &#123;multi: true&#125;)// 결과WriteResult(&#123; \"nMatched\" : 3, \"nUpserted\" : 0, \"nModified\" : 3 &#125;)// $sort 값이 1인경우 ASC, -1 인경우 DESC// 배열에서 값 제거하기db.shop.update( &#123;mall_id: \"bpmt001\", shop_no: 2&#125;, &#123; $pull: &#123;service: \"etc\"&#125; &#125;)// 결과WriteResult(&#123; \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 &#125;)// 배열에서 값 여러개 제거하기db.shops.update( &#123;mall_id: \"bpmt001\", shop_no: 2&#125;, &#123; $pull: &#123; service: &#123; $in: [\"etc\", \"special\"] &#125; &#125; &#125;)","categories":[{"name":"Database","slug":"Database","permalink":"http://lcw0910.github.io/categories/Database/"},{"name":"NoSQL","slug":"Database/NoSQL","permalink":"http://lcw0910.github.io/categories/Database/NoSQL/"}],"tags":[{"name":"Database","slug":"Database","permalink":"http://lcw0910.github.io/tags/Database/"},{"name":"NoSQL","slug":"NoSQL","permalink":"http://lcw0910.github.io/tags/NoSQL/"}]},{"title":"[Front-End]테스트 및 개발을 위한 mock server api 사용하기","slug":"angular-in-memory-data","date":"2017-11-06T13:11:41.000Z","updated":"2020-05-14T13:44:29.627Z","comments":true,"path":"2017/11/06/angular-in-memory-data/","link":"","permalink":"http://lcw0910.github.io/2017/11/06/angular-in-memory-data/","excerpt":"","text":"실무 작업을 하다보면 프로젝트 진행상 또는 일정상의 이유로 인해 백엔드 API가 개발되기 이전에 프론트엔드 작업을 진행해야하는 경우가 있다.이와같이 실제 API 서버가 구성되지 않은 시점에 mock 서버/서비스를 이용해서 dummy.json 데이터를 받을 수 있는 방법을 소개하고자 한다. typicode/json-server (https://github.com/typicode/json-server)https://jsonplaceholder.typicode.com/express-nedb-rest (https://www.npmjs.com/package/express-nedb-rest)https://reqres.in/Angular2+ 를 사용한다면… angular/in-memory-web-api (https://github.com/angular/in-memory-web-api)Quick Start의 내용을 조금만 읽어보면 어렵지 않게 적용이 가능하다.","categories":[{"name":"Development","slug":"Development","permalink":"http://lcw0910.github.io/categories/Development/"},{"name":"Front-End","slug":"Development/Front-End","permalink":"http://lcw0910.github.io/categories/Development/Front-End/"},{"name":"Angular","slug":"Development/Front-End/Angular","permalink":"http://lcw0910.github.io/categories/Development/Front-End/Angular/"}],"tags":[]},{"title":"Atom 프론트엔드 개발환경 세팅하기","slug":"devel-setting-atom","date":"2017-10-28T06:57:31.000Z","updated":"2020-05-14T13:44:29.628Z","comments":true,"path":"2017/10/28/devel-setting-atom/","link":"","permalink":"http://lcw0910.github.io/2017/10/28/devel-setting-atom/","excerpt":"","text":"플러그인 설치하기 atom-beautifyhttps://atom.io/packages/atom-beautifyHTML, CSS, JavaScript, PHP, Python, Ruby, Java, C, C++, C#, Objective-C, CoffeeScript, TypeScript 등의 코드를 아릅답게 정렬해 주는기능 docblockrhttps://atom.io/packages/docblockr메소드 작성 완료 후 윗라인에 “/**”을 치고 엔터를 치면 함수명, 파라미터명, 리턴타입등 깔끔한 주석 포멧을 제공해준다.설명과 파라미터, 리턴타입등에 대한 추가 정보만 입력하면 된다. javascript 외에도 많은 언어를 지원한다. emmethttps://atom.io/packages/emmet흔히 젠코딩이라 불리는 플러그인이다. 손가락 관절에 무리를 줄여주고 커피시간을 벌어주는 편리한 플러그인. minimaphttps://atom.io/packages/minimap작업중인 파일에 대한 미니맵 제공, 미니맵은 미니맵에 diff표시, 선택영역 하이라이트등 다양한 플러그인이 있지만 그닥 유용하지 않아해당 플러그인만 사용중. 미니맵을 드래그하여 페이지 상하 이동이 가능하여 긴 내용의 코드 작성시 유용하다. open-in-browserhttps://atom.io/packages/open-in-browser아톰에서 작업중인 html파일을 브라우저에서 열어보는 플러그인.가장 무난하고 깔끔해서 계속 사용중. run-in-atomhttps://atom.io/packages/run-in-atom아톰 에디터에서 바로 스크립트를 돌려볼 수 있는 플러그인.사실상 크롬 개발자도구에서 작성한 js파일을 실행하는 방식이지만 생각보다 유용하다. seti-iconhttps://atom.io/packages/seti-icons아톰 아이콘 패키지로 개인취향이다. 해당 아이콘팩에 아톰 style.less를 조금 수정하여 사용한다.참고로 다운로드 수는 file-icons(https://atom.io/packages/file-icons)가 20배이상 높다 ㅋ split-diffhttps://atom.io/packages/split-diff원래는 간단하게 diff확인할 경우 https://www.diffchecker.com/ 통해서 확인햇었는데아톰에서 바로 확인할 수 있는 심플한 플러그인이라 애용중이다.diff확인 및 변경이력 적용도 가능하다. color-pickerhttps://atom.io/packages/color-picker컬러피커로 rgb, rgba, hex등 다양한 색상값을 바로 얻을 수 있다. markdown-preview-plushttps://atom.io/packages/markdown-preview-plus아톰에는 markdown-preview가 기본으로 탑재되어 있다. 해당 플러그인을 사용할러면 기본 플러그인을 disable처리해 줘야한다.아니면 설정값을 두번씩 해주면 되긴하다. 실시간으로 마크다운 프리뷰를 확인할 수 있으며 프리뷰 창에서 우클릭하여 브라우저로 확인하거나 export to disk를 누르면 html, pdf, ebook로 내보낼 수 있다. 문서 내용이 길어지면 약간 버벅이지만 유용한 플러그인","categories":[{"name":"Development","slug":"Development","permalink":"http://lcw0910.github.io/categories/Development/"},{"name":"Setting","slug":"Development/Setting","permalink":"http://lcw0910.github.io/categories/Development/Setting/"}],"tags":[{"name":"editor","slug":"editor","permalink":"http://lcw0910.github.io/tags/editor/"},{"name":"Atom","slug":"Atom","permalink":"http://lcw0910.github.io/tags/Atom/"},{"name":"에디터","slug":"에디터","permalink":"http://lcw0910.github.io/tags/에디터/"},{"name":"플러그인","slug":"플러그인","permalink":"http://lcw0910.github.io/tags/플러그인/"},{"name":"개발환경 세팅","slug":"개발환경-세팅","permalink":"http://lcw0910.github.io/tags/개발환경-세팅/"}]},{"title":"좋은 퍼블리싱 하기","slug":"devel-front-publishing","date":"2017-10-27T05:22:56.000Z","updated":"2020-05-14T13:44:29.627Z","comments":true,"path":"2017/10/27/devel-front-publishing/","link":"","permalink":"http://lcw0910.github.io/2017/10/27/devel-front-publishing/","excerpt":"","text":"마크업 하기 전에 구조부터에디터를 열어 태그부터 찍기보다는 일단 디자이너가 전달해준 페이지의 레이아웃을 컴포넌트화 하는 작업을 선행한다.이는 기능 단위로 또는 속성 단위로 해당 영역을 묶어 표현하는 방식으로 Angular나 React를 접해본 개발자라면 익숙할 수 있는 부분이다. Reset CSS브라우저별 각 태그에 적용되는 Default CSS 속성이 다르기 때문에 CSS를 작성하기에 앞서 모든 CSS를 리셋 시키는 것이 좋다.http://meyerweb.com/eric/tools/css/reset/","categories":[{"name":"Development","slug":"Development","permalink":"http://lcw0910.github.io/categories/Development/"},{"name":"Front-End","slug":"Development/Front-End","permalink":"http://lcw0910.github.io/categories/Development/Front-End/"},{"name":"Etc","slug":"Development/Front-End/Etc","permalink":"http://lcw0910.github.io/categories/Development/Front-End/Etc/"}],"tags":[]},{"title":"프로토타입 개발시 유용한 사이트 & 툴 모음","slug":"devel-util","date":"2017-10-25T02:32:23.000Z","updated":"2020-05-14T13:44:29.628Z","comments":true,"path":"2017/10/25/devel-util/","link":"","permalink":"http://lcw0910.github.io/2017/10/25/devel-util/","excerpt":"","text":"JSON Generator개발시 필요한 샘플데이터를 JSON 형태로 자동 생성해주는 사이트 이다.사이트 내에서 제공되는 템플릿 태그(index, address, name, phone…)를 이용해실제 DB에 존재하는 것과 유사한 형태의 샘플데이터를 생성할 수 있있고, 생성되는 데이터의 개수 또한 설정 가능하다.","categories":[{"name":"Development","slug":"Development","permalink":"http://lcw0910.github.io/categories/Development/"},{"name":"Utility","slug":"Development/Utility","permalink":"http://lcw0910.github.io/categories/Development/Utility/"}],"tags":[]},{"title":"그들에게, 우리에게","slug":"diary-171023","date":"2017-10-23T12:10:24.000Z","updated":"2020-05-14T13:44:29.628Z","comments":true,"path":"2017/10/23/diary-171023/","link":"","permalink":"http://lcw0910.github.io/2017/10/23/diary-171023/","excerpt":"","text":"어쩌면 그는 그의 방향성을 줄곧 이야기 했는지도 모른다.그리고 우리는 우리의 방법으로 계속 다른 해석을 하고있었는지 모르겠다.그 해석의 결과에 대한 답변이 지금의 상황이라면 나는 그것을 받아들이기로 했다. 언젠가, 인생의 성적표를 받아들게 되는 그 날이 왔을때,당신, 그리고 당신당신이 살아온 그 성적표 앞에 떳떳할 수 있겠는가. 진주가 아무리 진흙탕 속에 빠졌다 한들 진주가 아니랴.세상이 아무리 진흙탕처럼 뒤죽박죽 흘러가도당신은 빛나는 보석같은 사람임을 잊지말라.","categories":[{"name":"Diary","slug":"Diary","permalink":"http://lcw0910.github.io/categories/Diary/"}],"tags":[]},{"title":"블레이드 러너 2049","slug":"movie-blade-runner-2049","date":"2017-10-17T07:41:04.000Z","updated":"2020-05-14T13:44:29.630Z","comments":true,"path":"2017/10/17/movie-blade-runner-2049/","link":"","permalink":"http://lcw0910.github.io/2017/10/17/movie-blade-runner-2049/","excerpt":"","text":"블레이드 러너 리뷰","categories":[{"name":"Movie","slug":"Movie","permalink":"http://lcw0910.github.io/categories/Movie/"}],"tags":[{"name":"movie","slug":"movie","permalink":"http://lcw0910.github.io/tags/movie/"},{"name":"blade runner","slug":"blade-runner","permalink":"http://lcw0910.github.io/tags/blade-runner/"},{"name":"라이언 고슬링","slug":"라이언-고슬링","permalink":"http://lcw0910.github.io/tags/라이언-고슬링/"}]},{"title":"Angular 4 기본설정","slug":"angular-default-setting","date":"2017-10-12T05:07:35.000Z","updated":"2020-05-14T13:44:29.627Z","comments":true,"path":"2017/10/12/angular-default-setting/","link":"","permalink":"http://lcw0910.github.io/2017/10/12/angular-default-setting/","excerpt":"","text":"이 장에서는 Angular 및 관련 라이브러리 설치와 기본 환경설정에 대해 알아본다… Requirements NodeJS Npm Angular 4 설치하기AngularCLI (개발지원을 위한 Angular의 Command Line Interface)라이브러리 설치하기Font-Awesome 설치하기Terminal1npm install --save font-awesome angular-font-awesome app.module.ts app.module.ts1234567891011121314151617import &#123; BrowserModule &#125; from '@angular/platform-browser';import &#123; NgModule &#125; from '@angular/core';import &#123; AngularFontAwesomeModule &#125; from 'angular-font-awesome';import &#123; AppComponent &#125; from './app.component';@NgModule(&#123; declarations: [ AppComponent ], imports: [ BrowserModule, AngularFontAwesomeModule // 모듈추가 ], providers: [], bootstrap: [AppComponent]&#125;)export class AppModule &#123; &#125;","categories":[{"name":"Development","slug":"Development","permalink":"http://lcw0910.github.io/categories/Development/"},{"name":"Front-End","slug":"Development/Front-End","permalink":"http://lcw0910.github.io/categories/Development/Front-End/"},{"name":"Angular","slug":"Development/Front-End/Angular","permalink":"http://lcw0910.github.io/categories/Development/Front-End/Angular/"}],"tags":[{"name":"front-end","slug":"front-end","permalink":"http://lcw0910.github.io/tags/front-end/"},{"name":"angular","slug":"angular","permalink":"http://lcw0910.github.io/tags/angular/"},{"name":"typescript","slug":"typescript","permalink":"http://lcw0910.github.io/tags/typescript/"}]}]}